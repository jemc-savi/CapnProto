:trait box _FromStructPointer
  :is TraceData
  :new box read_from_pointer(pointer CapnProto.Pointer.Struct)

:struct box CapnProto.List(A _FromStructPointer)
  :let _p CapnProto.Pointer.StructList
  :new box read_from_pointer(@_p)

  :fun size: @_p._list_count.usize

  :fun "[]!"(n USize): A.read_from_pointer(@_p[n.u32!]!)

  :fun each
    :yields A
    @_p.each -> (p | yield A.read_from_pointer(p))

  :is TraceData
  :fun trace_data(trace TraceData.Observer)
    trace.array(@_p.absolute_address - 8) -> (
      if (A <: TraceData) ( // TODO: This should have already been proved
        @each -> (element |
          trace.array_element(element)
        )
      )
    )

:trait _FromStructPointerBuilder
  :new from_pointer(pointer CapnProto.Pointer.Struct.Builder)

:struct CapnProto.List.Builder(A _FromStructPointerBuilder)
  :let _p CapnProto.Pointer.StructList.Builder
  :new from_pointer(@_p)

  :fun size: @_p._list_count.usize

  :fun ref "[]!"(n USize): A.from_pointer(@_p[n.u32!]!)

  :fun ref each
    :yields A
    @_p.each -> (p | yield A.from_pointer(p))
