:actor Main
  :is StdIn.Actor
  :let env Env
  :let io StdIn.Engine
  :let _reader: CapnProto.Segments.Reader.new
  :new (@env)
    @io = StdIn.Engine.new(@)
    StdIn.Ticket.get(@env.root.ticket_issuer, @)

  :fun ref io_react(action IO.Action)
    case action == (
    | IO.Action.Read |
      try (
        if @_reader.read!(@io.read_stream) @_handle_segments
      |
        @env.err.print("Maximum total capnpc segments size exceeded")
      )
    )
    @

  :fun ref _handle_segments
    try (
      message = CapnProto.Message(CapnProto.Meta.CodeGeneratorRequest)
        .from_segments!(@_reader.take_segments)
      @_generate(message.root)
    |
      @env.err.print("Failed to parse the root of the capnpc data")
    )

  :fun ref _generate(req CapnProto.Meta.CodeGeneratorRequest)
    req.requested_files.each -> (file |
      req.nodes.each -> (node |
        if (node.id == file.id) (
          @env.out.print(_Gen.new(req, node).take_string)
        )
      )
    )
