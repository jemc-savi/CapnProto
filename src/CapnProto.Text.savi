:struct CapnProto.Text
  :let _p CapnProto.Pointer.U8List'box
  :new from_pointer(@_p)
  :new box read_from_pointer(p CapnProto.Pointer.U8List'box): @_p = p

  :new _new(segment CapnProto.Segment, value String)
    byte_offset = segment._allocate_and_write_string(value)
    @_p = CapnProto.Pointer.U8List._new_read(
      segment, byte_offset, (value.size + 1).u32
    )

  :fun size: @_p._byte_count.usize.saturating_subtract(1) // trimming off the null terminator

  :is IntoString
  :fun into_string_space: @size
  :fun into_string(out String'iso) String'iso
    // TODO: Do a more efficient copy here.
    @_p.each(0, @size) -> (byte | out.push_byte(byte))
    --out

  :fun each_byte_with_index(
    from USize = 0
    to = USize.max_value
    stride USize = 1
  )
    @_p.each_with_index(from, to.min(@size), stride) -> (byte, index |
      yield (byte, index)
    )
